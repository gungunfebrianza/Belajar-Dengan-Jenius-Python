import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QList<bool>"
        accessSemantics: "sequence"
        valueType: "bool"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<bool>"
        accessSemantics: "sequence"
        valueType: "bool"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QList<int>"
        accessSemantics: "sequence"
        valueType: "int"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<int>"
        accessSemantics: "sequence"
        valueType: "int"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QItemSelection"
        accessSemantics: "sequence"
        valueType: "QItemSelectionRange"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QModelIndexList"
        accessSemantics: "sequence"
        valueType: "QModelIndex"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<QModelIndex>"
        accessSemantics: "sequence"
        valueType: "QModelIndex"
    }
    Component {
        file: "private/qqmlengine_p.h"
        name: "QObject"
        accessSemantics: "reference"
        exports: ["QtQml/QtObject 2.0", "QtQml/QtObject 6.0"]
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "objectName"; type: "QString" }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "QString" }
        }
        Method {
            name: "_q_reregisterTimers"
            Parameter { type: "void"; isPointer: true }
        }
        Method { name: "toString"; type: "string" }
        Method { name: "destroy" }
        Method {
            name: "destroy"
            Parameter { name: "delay"; type: "int" }
        }
    }
    Component {
        file: "private/qqmlglobal_p.h"
        name: "QQmlApplication"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "arguments"; type: "QStringList"; isReadonly: true }
        Property { name: "name"; type: "QString" }
        Property { name: "version"; type: "QString" }
        Property { name: "organization"; type: "QString" }
        Property { name: "domain"; type: "QString" }
        Signal { name: "aboutToQuit" }
        Method {
            name: "setName"
            Parameter { name: "arg"; type: "QString" }
        }
        Method {
            name: "setVersion"
            Parameter { name: "arg"; type: "QString" }
        }
        Method {
            name: "setOrganization"
            Parameter { name: "arg"; type: "QString" }
        }
        Method {
            name: "setDomain"
            Parameter { name: "arg"; type: "QString" }
        }
    }
    Component {
        file: "private/qqmlbind_p.h"
        name: "QQmlBind"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtQml/Binding 2.0",
            "QtQml/Binding 2.8",
            "QtQml/Binding 2.14",
            "QtQml/Binding 6.0"
        ]
        exportMetaObjectRevisions: [512, 520, 526, 1536]
        Enum {
            name: "RestorationMode"
            values: [
                "RestoreNone",
                "RestoreBinding",
                "RestoreValue",
                "RestoreBindingOrValue"
            ]
        }
        Property { name: "target"; type: "QObject"; isPointer: true }
        Property { name: "property"; type: "QString" }
        Property { name: "value"; type: "QJSValue" }
        Property { name: "when"; type: "bool" }
        Property { name: "delayed"; revision: 520; type: "bool" }
        Property { name: "restoreMode"; revision: 526; type: "RestorationMode" }
        Method { name: "targetValueChanged" }
    }
    Component {
        file: "qqmlcomponent.h"
        name: "QQmlComponent"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QtQml/Component 2.0", "QtQml/Component 6.0"]
        exportMetaObjectRevisions: [512, 1536]
        attachedType: "QQmlComponentAttached"
        Enum {
            name: "CompilationMode"
            values: ["PreferSynchronous", "Asynchronous"]
        }
        Enum {
            name: "Status"
            values: ["Null", "Ready", "Loading", "Error"]
        }
        Property { name: "progress"; type: "double"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Signal {
            name: "statusChanged"
            Parameter { type: "QQmlComponent::Status" }
        }
        Signal {
            name: "progressChanged"
            Parameter { type: "double" }
        }
        Method {
            name: "loadUrl"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "loadUrl"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mode"; type: "CompilationMode" }
        }
        Method {
            name: "setData"
            Parameter { type: "QByteArray" }
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Method { name: "errorString"; type: "QString" }
        Method {
            name: "createObject"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
        Method {
            name: "incubateObject"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
    }
    Component {
        file: "private/qqmlcomponentattached_p.h"
        name: "QQmlComponentAttached"
        accessSemantics: "reference"
        prototype: "QObject"
        Signal { name: "completed" }
        Signal { name: "destruction" }
    }
    Component {
        file: "private/qqmlconnections_p.h"
        name: "QQmlConnections"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtQml/Connections 2.0",
            "QtQml/Connections 2.3",
            "QtQml/Connections 6.0"
        ]
        exportMetaObjectRevisions: [512, 515, 1536]
        Property { name: "target"; type: "QObject"; isPointer: true }
        Property { name: "enabled"; revision: 515; type: "bool" }
        Property { name: "ignoreUnknownSignals"; type: "bool" }
        Signal { name: "enabledChanged"; revision: 515 }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QQmlEasingEnums"
        accessSemantics: "none"
        exports: ["QtQml/Easing 2.0", "QtQml/Easing 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
        Enum {
            name: "Type"
            values: [
                "Linear",
                "InQuad",
                "OutQuad",
                "InOutQuad",
                "OutInQuad",
                "InCubic",
                "OutCubic",
                "InOutCubic",
                "OutInCubic",
                "InQuart",
                "OutQuart",
                "InOutQuart",
                "OutInQuart",
                "InQuint",
                "OutQuint",
                "InOutQuint",
                "OutInQuint",
                "InSine",
                "OutSine",
                "InOutSine",
                "OutInSine",
                "InExpo",
                "OutExpo",
                "InOutExpo",
                "OutInExpo",
                "InCirc",
                "OutCirc",
                "InOutCirc",
                "OutInCirc",
                "InElastic",
                "OutElastic",
                "InOutElastic",
                "OutInElastic",
                "InBack",
                "OutBack",
                "InOutBack",
                "OutInBack",
                "InBounce",
                "OutBounce",
                "InOutBounce",
                "OutInBounce",
                "InCurve",
                "OutCurve",
                "SineCurve",
                "CosineCurve",
                "BezierSpline",
                "Bezier"
            ]
        }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QEasingCurve"
        accessSemantics: "value"
        Enum {
            name: "Type"
            values: [
                "Linear",
                "InQuad",
                "OutQuad",
                "InOutQuad",
                "OutInQuad",
                "InCubic",
                "OutCubic",
                "InOutCubic",
                "OutInCubic",
                "InQuart",
                "OutQuart",
                "InOutQuart",
                "OutInQuart",
                "InQuint",
                "OutQuint",
                "InOutQuint",
                "OutInQuint",
                "InSine",
                "OutSine",
                "InOutSine",
                "OutInSine",
                "InExpo",
                "OutExpo",
                "InOutExpo",
                "OutInExpo",
                "InCirc",
                "OutCirc",
                "InOutCirc",
                "OutInCirc",
                "InElastic",
                "OutElastic",
                "InOutElastic",
                "OutInElastic",
                "InBack",
                "OutBack",
                "InOutBack",
                "OutInBack",
                "InBounce",
                "OutBounce",
                "InOutBounce",
                "OutInBounce",
                "InCurve",
                "OutCurve",
                "SineCurve",
                "CosineCurve",
                "BezierSpline",
                "TCBSpline",
                "Custom",
                "NCurveTypes"
            ]
        }
        Property { name: "type"; type: "QQmlEasingEnums::Type" }
        Property { name: "amplitude"; type: "double" }
        Property { name: "overshoot"; type: "double" }
        Property { name: "period"; type: "double" }
        Property { name: "bezierCurve"; type: "QVariantList" }
    }
    Component {
        file: "private/qqmlmodelindexvaluetype_p.h"
        name: "QItemSelectionRange"
        accessSemantics: "value"
        Property { name: "top"; type: "int"; isReadonly: true }
        Property { name: "left"; type: "int"; isReadonly: true }
        Property { name: "bottom"; type: "int"; isReadonly: true }
        Property { name: "right"; type: "int"; isReadonly: true }
        Property { name: "width"; type: "int"; isReadonly: true }
        Property { name: "height"; type: "int"; isReadonly: true }
        Property { name: "topLeft"; type: "QPersistentModelIndex"; isReadonly: true }
        Property { name: "bottomRight"; type: "QPersistentModelIndex"; isReadonly: true }
        Property { name: "parent"; type: "QModelIndex"; isReadonly: true }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "empty"; type: "bool"; isReadonly: true }
        Property { name: "model"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Method { name: "toString"; type: "QString" }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parentIndex"; type: "QModelIndex" }
        }
        Method {
            name: "intersects"
            type: "bool"
            Parameter { name: "other"; type: "QItemSelectionRange" }
        }
        Method {
            name: "intersected"
            type: "QItemSelectionRange"
            Parameter { name: "other"; type: "QItemSelectionRange" }
        }
    }
    Component {
        file: "private/qqmllocale_p.h"
        name: "QQmlLocale"
        accessSemantics: "none"
        exports: ["QtQml/Locale 2.2", "QtQml/Locale 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [514, 1536]
        Enum {
            name: "MeasurementSystem"
            values: [
                "MetricSystem",
                "ImperialSystem",
                "ImperialUSSystem",
                "ImperialUKSystem"
            ]
        }
        Enum {
            name: "FormatType"
            values: ["LongFormat", "ShortFormat", "NarrowFormat"]
        }
        Enum {
            name: "CurrencySymbolFormat"
            values: [
                "CurrencyIsoCode",
                "CurrencySymbol",
                "CurrencyDisplayName"
            ]
        }
        Enum {
            name: "DayOfWeek"
            values: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ]
        }
        Enum {
            name: "NumberOptions"
            values: [
                "DefaultNumberOptions",
                "OmitGroupSeparator",
                "RejectGroupSeparator",
                "OmitLeadingZeroInExponent",
                "RejectLeadingZeroInExponent",
                "IncludeTrailingZeroesAfterDot",
                "RejectTrailingZeroesAfterDot"
            ]
        }
    }
    Component {
        file: "private/qqmlloggingcategory_p.h"
        name: "QQmlLoggingCategory"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtQml/LoggingCategory 2.8",
            "QtQml/LoggingCategory 2.12",
            "QtQml/LoggingCategory 6.0"
        ]
        exportMetaObjectRevisions: [520, 524, 1536]
        Enum {
            name: "DefaultLogLevel"
            values: ["Debug", "Info", "Warning", "Critical", "Fatal"]
        }
        Property { name: "name"; type: "QString" }
        Property { name: "defaultLogLevel"; revision: 524; type: "DefaultLogLevel" }
    }
    Component {
        file: "private/qqmlmodelindexvaluetype_p.h"
        name: "QModelIndex"
        accessSemantics: "value"
        Property { name: "row"; type: "int"; isReadonly: true }
        Property { name: "column"; type: "int"; isReadonly: true }
        Property { name: "parent"; type: "QModelIndex"; isReadonly: true }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "model"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "internalId"; type: "qulonglong"; isReadonly: true }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlmodelindexvaluetype_p.h"
        name: "QPersistentModelIndex"
        accessSemantics: "value"
        Property { name: "row"; type: "int"; isReadonly: true }
        Property { name: "column"; type: "int"; isReadonly: true }
        Property { name: "parent"; type: "QModelIndex"; isReadonly: true }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "model"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "internalId"; type: "qulonglong"; isReadonly: true }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlplatform_p.h"
        name: "QQmlPlatform"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "os"; type: "QString"; isReadonly: true }
        Property { name: "pluginName"; type: "QString"; isReadonly: true }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QPointF"
        accessSemantics: "value"
        exports: ["QtQml/point 2.0", "QtQml/point 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "x"; type: "double" }
        Property { name: "y"; type: "double" }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QPoint"
        accessSemantics: "value"
        Property { name: "x"; type: "int" }
        Property { name: "y"; type: "int" }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QQmlProperty"
        accessSemantics: "value"
        Property { name: "object"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "name"; type: "QString"; isReadonly: true }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QRectF"
        accessSemantics: "value"
        exports: ["QtQml/rect 2.0", "QtQml/rect 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "x"; type: "double" }
        Property { name: "y"; type: "double" }
        Property { name: "width"; type: "double" }
        Property { name: "height"; type: "double" }
        Property { name: "left"; type: "double"; isReadonly: true }
        Property { name: "right"; type: "double"; isReadonly: true }
        Property { name: "top"; type: "double"; isReadonly: true }
        Property { name: "bottom"; type: "double"; isReadonly: true }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QRect"
        accessSemantics: "value"
        Property { name: "x"; type: "int" }
        Property { name: "y"; type: "int" }
        Property { name: "width"; type: "int" }
        Property { name: "height"; type: "int" }
        Property { name: "left"; type: "int"; isReadonly: true }
        Property { name: "right"; type: "int"; isReadonly: true }
        Property { name: "top"; type: "int"; isReadonly: true }
        Property { name: "bottom"; type: "int"; isReadonly: true }
        Method { name: "toString"; type: "QString" }
    }
    Component { file: "qqmlscriptstring.h"; name: "QQmlScriptString"; accessSemantics: "value" }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QSizeF"
        accessSemantics: "value"
        exports: ["QtQml/size 2.0", "QtQml/size 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "width"; type: "double" }
        Property { name: "height"; type: "double" }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmlvaluetype_p.h"
        name: "QSize"
        accessSemantics: "value"
        Property { name: "width"; type: "int" }
        Property { name: "height"; type: "int" }
        Method { name: "toString"; type: "QString" }
    }
    Component {
        file: "private/qqmltimer_p.h"
        name: "QQmlTimer"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QtQml/Timer 2.0", "QtQml/Timer 6.0"]
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "interval"; type: "int" }
        Property { name: "running"; type: "bool" }
        Property { name: "repeat"; type: "bool" }
        Property { name: "triggeredOnStart"; type: "bool" }
        Property { name: "parent"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "triggered" }
        Method { name: "start" }
        Method { name: "stop" }
        Method { name: "restart" }
        Method { name: "ticked" }
    }
    Component {
        file: "private/qqmltypenotavailable_p.h"
        name: "QQmlTypeNotAvailable"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QtQml/TypeNotAvailable 2.15", "QtQml/TypeNotAvailable 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [527, 1536]
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QList<qreal>"
        accessSemantics: "sequence"
        valueType: "double"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<qreal>"
        accessSemantics: "sequence"
        valueType: "double"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QStringList"
        accessSemantics: "sequence"
        valueType: "QString"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<QString>"
        accessSemantics: "sequence"
        valueType: "QString"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "QList<QUrl>"
        accessSemantics: "sequence"
        valueType: "QUrl"
    }
    Component {
        file: "private/qv4sequenceobject_p.h"
        name: "std::vector<QUrl>"
        accessSemantics: "sequence"
        valueType: "QUrl"
    }
    Component {
        file: "private/qqmlbuiltinfunctions_p.h"
        name: "QV4::QtObject"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QtQml/Qt 2.0", "QtQml/Qt 6.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [512, 1536]
        Enum {
            name: "LoadingMode"
            values: ["Asynchronous", "Synchronous"]
        }
        Property { name: "application"; type: "QQmlApplication"; isReadonly: true; isPointer: true }
        Property { name: "platform"; type: "QQmlPlatform"; isReadonly: true; isPointer: true }
        Property { name: "inputMethod"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "styleHints"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "callLater"; type: "QJSValue"; isReadonly: true }
        Property { name: "uiLanguage"; bindable: "uiLanguageBindable"; type: "QString" }
        Method {
            name: "include"
            type: "QJSValue"
            Parameter { name: "url"; type: "QString" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "include"
            type: "QJSValue"
            Parameter { name: "url"; type: "QString" }
        }
        Method {
            name: "isQtObject"
            type: "bool"
            Parameter { name: "value"; type: "QJSValue" }
        }
        Method {
            name: "color"
            type: "QVariant"
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "rgba"
            type: "QVariant"
            Parameter { name: "r"; type: "double" }
            Parameter { name: "g"; type: "double" }
            Parameter { name: "b"; type: "double" }
            Parameter { name: "a"; type: "double" }
        }
        Method {
            name: "rgba"
            type: "QVariant"
            Parameter { name: "r"; type: "double" }
            Parameter { name: "g"; type: "double" }
            Parameter { name: "b"; type: "double" }
        }
        Method {
            name: "hsla"
            type: "QVariant"
            Parameter { name: "h"; type: "double" }
            Parameter { name: "s"; type: "double" }
            Parameter { name: "l"; type: "double" }
            Parameter { name: "a"; type: "double" }
        }
        Method {
            name: "hsla"
            type: "QVariant"
            Parameter { name: "h"; type: "double" }
            Parameter { name: "s"; type: "double" }
            Parameter { name: "l"; type: "double" }
        }
        Method {
            name: "hsva"
            type: "QVariant"
            Parameter { name: "h"; type: "double" }
            Parameter { name: "s"; type: "double" }
            Parameter { name: "v"; type: "double" }
            Parameter { name: "a"; type: "double" }
        }
        Method {
            name: "hsva"
            type: "QVariant"
            Parameter { name: "h"; type: "double" }
            Parameter { name: "s"; type: "double" }
            Parameter { name: "v"; type: "double" }
        }
        Method {
            name: "colorEqual"
            type: "bool"
            Parameter { name: "lhs"; type: "QVariant" }
            Parameter { name: "rhs"; type: "QVariant" }
        }
        Method {
            name: "rect"
            type: "QRectF"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "width"; type: "double" }
            Parameter { name: "height"; type: "double" }
        }
        Method {
            name: "point"
            type: "QPointF"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "size"
            type: "QSizeF"
            Parameter { name: "width"; type: "double" }
            Parameter { name: "height"; type: "double" }
        }
        Method {
            name: "vector2d"
            type: "QVariant"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "vector3d"
            type: "QVariant"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "z"; type: "double" }
        }
        Method {
            name: "vector4d"
            type: "QVariant"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "z"; type: "double" }
            Parameter { name: "w"; type: "double" }
        }
        Method {
            name: "quaternion"
            type: "QVariant"
            Parameter { name: "scalar"; type: "double" }
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "z"; type: "double" }
        }
        Method { name: "matrix4x4"; type: "QVariant" }
        Method {
            name: "matrix4x4"
            type: "QVariant"
            Parameter { name: "m11"; type: "double" }
            Parameter { name: "m12"; type: "double" }
            Parameter { name: "m13"; type: "double" }
            Parameter { name: "m14"; type: "double" }
            Parameter { name: "m21"; type: "double" }
            Parameter { name: "m22"; type: "double" }
            Parameter { name: "m23"; type: "double" }
            Parameter { name: "m24"; type: "double" }
            Parameter { name: "m31"; type: "double" }
            Parameter { name: "m32"; type: "double" }
            Parameter { name: "m33"; type: "double" }
            Parameter { name: "m34"; type: "double" }
            Parameter { name: "m41"; type: "double" }
            Parameter { name: "m42"; type: "double" }
            Parameter { name: "m43"; type: "double" }
            Parameter { name: "m44"; type: "double" }
        }
        Method {
            name: "matrix4x4"
            type: "QVariant"
            Parameter { name: "value"; type: "QJSValue" }
        }
        Method {
            name: "lighter"
            type: "QVariant"
            Parameter { name: "color"; type: "QJSValue" }
            Parameter { name: "factor"; type: "double" }
        }
        Method {
            name: "lighter"
            type: "QVariant"
            Parameter { name: "color"; type: "QJSValue" }
        }
        Method {
            name: "darker"
            type: "QVariant"
            Parameter { name: "color"; type: "QJSValue" }
            Parameter { name: "factor"; type: "double" }
        }
        Method {
            name: "darker"
            type: "QVariant"
            Parameter { name: "color"; type: "QJSValue" }
        }
        Method {
            name: "alpha"
            type: "QVariant"
            Parameter { name: "baseColor"; type: "QJSValue" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "tint"
            type: "QVariant"
            Parameter { name: "baseColor"; type: "QJSValue" }
            Parameter { name: "tintColor"; type: "QJSValue" }
        }
        Method {
            name: "formatDate"
            type: "QString"
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "format"; type: "QString" }
        }
        Method {
            name: "formatDate"
            type: "QString"
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "format"; type: "Qt::DateFormat" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QTime" }
            Parameter { name: "format"; type: "QString" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QString" }
            Parameter { name: "format"; type: "QString" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QTime" }
            Parameter { name: "format"; type: "Qt::DateFormat" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QString" }
            Parameter { name: "format"; type: "Qt::DateFormat" }
        }
        Method {
            name: "formatDateTime"
            type: "QString"
            Parameter { name: "date"; type: "QDateTime" }
            Parameter { name: "format"; type: "QString" }
        }
        Method {
            name: "formatDateTime"
            type: "QString"
            Parameter { name: "date"; type: "QDateTime" }
            Parameter { name: "format"; type: "Qt::DateFormat" }
        }
        Method {
            name: "formatDate"
            type: "QString"
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "locale"; type: "QLocale" }
            Parameter { name: "formatType"; type: "QLocale::FormatType" }
        }
        Method {
            name: "formatDate"
            type: "QString"
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "locale"; type: "QLocale" }
        }
        Method {
            name: "formatDate"
            type: "QString"
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QTime" }
            Parameter { name: "locale"; type: "QLocale" }
            Parameter { name: "formatType"; type: "QLocale::FormatType" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QTime" }
            Parameter { name: "locale"; type: "QLocale" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QTime" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QString" }
            Parameter { name: "locale"; type: "QLocale" }
            Parameter { name: "formatType"; type: "QLocale::FormatType" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QString" }
            Parameter { name: "locale"; type: "QLocale" }
        }
        Method {
            name: "formatTime"
            type: "QString"
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "formatDateTime"
            type: "QString"
            Parameter { name: "date"; type: "QDateTime" }
            Parameter { name: "locale"; type: "QLocale" }
            Parameter { name: "formatType"; type: "QLocale::FormatType" }
        }
        Method {
            name: "formatDateTime"
            type: "QString"
            Parameter { name: "date"; type: "QDateTime" }
            Parameter { name: "locale"; type: "QLocale" }
        }
        Method {
            name: "formatDateTime"
            type: "QString"
            Parameter { name: "date"; type: "QDateTime" }
        }
        Method { name: "locale"; type: "QLocale" }
        Method {
            name: "locale"
            type: "QLocale"
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "resolvedUrl"
            type: "QUrl"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "openUrlExternally"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "font"
            type: "QVariant"
            Parameter { name: "fontSpecifier"; type: "QJSValue" }
        }
        Method { name: "fontFamilies"; type: "QStringList" }
        Method {
            name: "md5"
            type: "QString"
            Parameter { name: "data"; type: "QString" }
        }
        Method {
            name: "btoa"
            type: "QString"
            Parameter { name: "data"; type: "QString" }
        }
        Method {
            name: "atob"
            type: "QString"
            Parameter { name: "data"; type: "QString" }
        }
        Method { name: "quit" }
        Method {
            name: "exit"
            Parameter { name: "retCode"; type: "int" }
        }
        Method {
            name: "createQmlObject"
            type: "QObject*"
            Parameter { name: "qml"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "createQmlObject"
            type: "QObject*"
            Parameter { name: "qml"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createComponent"
            type: "QQmlComponent*"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createComponent"
            type: "QQmlComponent*"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mode"; type: "QQmlComponent::CompilationMode" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createComponent"
            type: "QQmlComponent*"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mode"; type: "QQmlComponent::CompilationMode" }
        }
        Method {
            name: "createComponent"
            type: "QQmlComponent*"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "binding"
            type: "QJSValue"
            Parameter { name: "function"; type: "QJSValue" }
        }
    }
}
